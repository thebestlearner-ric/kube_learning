apiVersion: v1
data:
  Corefile: |
    organisation.com:53 {
      errors
      cache 3600
      proxy . 123.3.4.1
    }
    on.prem.organisation.com:53 {
      errors
      cache 300
      proxy . 123.3.4.2
    }
    .:53 {
        errors            #Enable error logging
        health {          #Serve liveness status on http 8080
           lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa { #Backend to k8s for cluster.local and reverse domains
           pods insecure                                 #Mimic kube-dns pod records behaviour
           fallthrough in-addr.arpa ip6.arpa             #Resolve CNAME targets upstream
           ttl 30                                        #Continue searching reverse zones
        }
        prometheus :9153                                 #Serve prometheus metrics
        forward . /etc/resolv.conf {
           max_concurrent 1000
        }
        proxy mycompany.com 10.2.4.5
        proxy . /etc/resolv.conf                         #Forward other domains to /etc/resolv.conf ns
        cache 30                                         #Cache for up to 30 seconds
        loop                                             #DNS protocol loop check
        reload                                           #Reload server if the Corefile change
        loadbalance                                      #Shuffle order of returned records
    }
kind: ConfigMap
metadata:
  creationTimestamp: "2024-07-10T15:50:09Z"
  name: coredns
  namespace: kube-system
  resourceVersion: "254"
  uid: 9bf315d5-3620-4b38-9203-ce2b14b83e2c
